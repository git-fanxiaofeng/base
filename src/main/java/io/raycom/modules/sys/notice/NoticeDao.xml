<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.raycom.modules.sys.notice.NoticeDao">
	
	<!-- 获取所有公告 -->
	<select id="getAllList" resultType="rdata" parameterType="page">
		SELECT 	row_number()over(order by tun.create_date desc)										"num",
				tun.notice_id																		"noticeId",
				tun.notice_title																	"noticeTitle",
				to_char(tun.start_date,'yyyy-mm-dd')												"startDate",
				to_char(tun.end_date,'yyyy-mm-dd')													"endDate",
				decode(tun.publish_sys,'02','U-PS','U-SC')											"publishSysName",
				tun.publish_sys																		"publishSys",
				to_char(tun.create_date,'yyyy-mm-dd hh24:mi:ss')												"createDate"
		 FROM	com_notice tun
		 WHERE  tun.del_flag = 'N' 
		 <if test="param.orgId != null and param.orgId != ''">
		 and ( tun.org_id = #{param.orgId} OR tun.org_id is null)
		</if>
      	<if test="param.noticeTitle != null and param.noticeTitle != ''">
		 AND 	tun.notice_title like  '%' || trim(#{param.noticeTitle}) || '%'
		</if>
		<if test="param.startDate1 != null and param.startDate1 != ''">
		AND 	tun.start_date > to_date(#{param.startDate1},'yyyy-mm-dd') 
		</if>
	    <if test="param.endDate1 != null and param.endDate1 != ''">
		 AND 	to_date(#{param.endDate1},'yyyy-mm-dd') > tun.start_date
		</if> 
		<if test="param.startDate2 != null and param.startDate2 != ''">
		 AND 	tun.end_date > to_date(#{param.startDate2},'yyyy-mm-dd') 
		</if>
	    <if test="param.endDate2 != null and param.endDate2 != ''">
		 AND 	to_date(#{param.endDate2},'yyyy-mm-dd') > tun.end_date
		</if>
	</select>	
	
	<!-- 根据公告Id获取公告详情 -->
	<select id="getNotice" parameterType="rdata" resultType="rdata">
		SELECT	notice_id								"noticeId",
				notice_title							"noticeTitle",
				dbms_lob.substr(notice_content)			"noticeContent",
				to_char(start_date,'yyyy-mm-dd hh24:mi:ss')		"startDate",
				to_char(end_date,'yyyy-mm-dd hh24:mi:ss')			"endDate",
				publish_sys								"publishSys",
				decode(publish_sys,'01','U-SC','U-PS')	"publishSysName",
        		notice_type								"noticeType",
        		decode(notice_type,'01','公告','02','Q' || chr(38) || 'A','特色')	"noticeTypeName",
        		notice_classify							"noticeClassify",
        		F_GET_COM_DICT_NAME(notice_classify, 	'noticeClassify')	"noticeClassifyName",
        		notice_picture							"noticePicture",
        		show_no									"showNo"
		 FROM	com_notice tun
		WHERE   tun.notice_id=#{noticeId}
	</select>
	
	<select id="queryNoticeId" resultType="String">
		select	seq_usc_notice.nextval
		from	dual
	</select>
	
	<!-- 新增保存公告 -->
	<insert id="createNoticeDo" parameterType="rdata">
       	insert into com_notice (
        		notice_id,
        		notice_title, 
        		notice_content,
        		start_date,
        		end_date,
        		publish_sys,
        		notice_type,
        		notice_classify,
        		notice_picture,		
        		show_no,
        		del_flag,
        		create_date,
        		create_by,
        		update_date,
        		update_by,
        		org_id)
       	 values (
        		#{noticeId},
        		trim(#{noticeTitle}),
        		#{noticeContent,jdbcType=BLOB},
        		to_date(trim(#{startDate}),'yyyy-mm-dd hh24:mi:ss'),
        		to_date(trim(#{endDate}),'yyyy-mm-dd hh24:mi:ss'),
        		#{publishSys},
        		#{noticeType},
        		#{noticeClassify},
        		#{noticePicture},
        		#{showNo},
        		'N',
        		sysdate,
        		#{currentUser},
        		sysdate,
        		#{currentUser},
        		#{orgId})
    </insert>
	
	<!-- 修改公告 -->
	<update id="updateNoticeDo" parameterType="rdata">
		UPDATE  com_notice
		   SET  notice_title	= trim(#{noticeTitle}), 
             	notice_content	= #{noticeContent,jdbcType=BLOB},
             	start_date		= to_date(trim(#{startDate}),'yyyy-mm-dd hh24:mi:ss'),
             	end_date		= to_date(trim(#{endDate}),'yyyy-mm-dd hh24:mi:ss'),
             	publish_sys		= #{publishSys},
        		notice_type		= #{noticeType},
        		notice_classify	= #{noticeClassify},
        		notice_picture	= #{noticePicture},
             	update_date		= sysdate,
             	update_by		= #{currentUser},
             	show_no			= #{showNo}
		 WHERE  notice_id		= #{noticeId}
	</update>
	
	<!-- 根据id删除 -->
	<delete id="delete" parameterType="rdata">
		UPDATE  com_notice 
		SET  	del_flag		='Y',
				update_date		= sysdate,
             	update_by		= #{currentUser} 
		WHERE 	notice_id = #{noticeId}
	</delete>
	
</mapper>